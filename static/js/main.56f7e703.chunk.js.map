{"version":3,"sources":["reportWebVitals.ts","feature/commit/commit.tsx","feature/commit/layout.tsx","feature/commit/commits.tsx","feature/search/inputs.tsx","App.tsx","theme/main.theme.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CommitComponent","commitNode","commit","message","date","committer","sha","login","avatar_url","Paper","variant","sx","width","p","Grid","container","columns","xs","md","item","sm","Avatar","src","Typography","overflow","m","dateFormat","Layout","children","Container","maxWidth","CommitsComponent","uri","params","repoAddress","parameters","useQuery","a","url","URL","Object","keys","forEach","key","searchParams","append","fetch","toString","headers","Accept","res","json","data","error","isLoading","refetch","useEffect","length","map","node","SearchInputs","onSubmit","useState","text","setText","page","setPage","branch","setBranch","spacing","TextField","size","name","required","fullWidth","label","autoFocus","value","onChange","e","target","Button","onClick","per_page","queryClient","QueryClient","App","setRepoAddress","setParameters","client","component","CssBaseline","theme","createTheme","palette","primary","main","secondary","mainTheme","info","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"uKAgBeA,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,4FCFC,SAASQ,EAAT,GAAsE,IAA3CC,EAA0C,EAA1CA,WACxC,EAEIA,EADFC,OAAUC,EADZ,EACYA,QAAsBC,EADlC,EACqBC,UAAaD,KAAUE,EACxCL,EADwCK,IAD5C,EAEIL,EAD6CI,UAAaE,EAD9D,EAC8DA,MAAOC,EADrE,EACqEA,WAErE,OACE,eAACC,EAAA,EAAD,CAAOC,QAAQ,WAAWC,GAAI,CAAEC,MAAO,OAAQC,EAAG,GAAlD,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,CAAEC,GAAI,GAAIC,GAAI,GAAvC,UACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAACF,GAAI,EAAGG,GAAI,EAAtB,SACE,cAACC,EAAA,EAAD,CAAQC,IAAKd,MAEf,cAACM,EAAA,EAAD,CAAMK,MAAI,EAACF,GAAI,EAAGG,GAAI,GAAtB,SACE,cAACG,EAAA,EAAD,CAAYb,QAAQ,KAAKc,SAAS,SAASb,GAAI,CAAEc,EAAG,GAApD,SAA0DlB,SAG9D,cAACgB,EAAA,EAAD,CAAYb,QAAQ,QAApB,SAA6BP,IAC7B,cAACoB,EAAA,EAAD,CAAYb,QAAQ,YAApB,SAAiCJ,IACjC,cAACiB,EAAA,EAAD,CAAYb,QAAQ,YAApB,SAAiCgB,YAAWtB,EAAM,iB,aCrBzC,SAASuB,EAAT,GAA8D,IAA5CC,EAA2C,EAA3CA,SAC/B,OACE,cAACC,EAAA,EAAD,CAAWC,SAAS,KAAKnB,GAAI,CAAEc,EAAG,GAAlC,SACE,cAACX,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,CAAEC,GAAI,EAAGC,GAAI,IAAtC,SACGU,MCWM,SAASG,EAAT,GAEX,IAbgBC,EAAaC,EAWUC,EAExC,EAFwCA,YAAaC,EAErD,EAFqDA,WAGtD,EAEIC,mBAAyB,WAhBXJ,EAgBiCE,EAhBpBD,EAgBiCE,EAhB/C,sBAAoD,4BAAAE,EAAA,6DAC/DC,EAAM,IAAIC,IAAIP,GACpBQ,OAAOC,KAAKR,GAAQS,SAAQ,SAACC,GAAD,OAASL,EAAIM,aAAaC,OAAOF,EAAKV,EAAOU,OAFJ,kBAI9DG,MAAMR,EAAIS,WAAY,CAC3BC,QAAS,CACPC,OAAQ,oCAETvD,MAAK,SAACwD,GAAD,OAASA,EAAIC,WARgD,6CAenEC,EADF,EACEA,KAAMC,EADR,EACQA,MAAOC,EADf,EACeA,UAAWC,EAD1B,EAC0BA,QAG1B,OADAC,qBAAU,WAAQD,MAAc,CAACrB,EAAaC,IAE5C,eAACR,EAAD,WACG0B,GACC,uCAEG,IACAA,EAAMlD,WAGVmD,GAAa,2CACbF,GACIA,EAAKK,OACNL,EAAKM,KAAI,SAACC,GAAD,OACT,cAAC3D,EAAD,CAAgCC,WAAY0D,GAAtBA,EAAKrD,QAE1B,oD,+BCtCI,SAASsD,EAAT,GAMX,IANmCC,EAMpC,EANoCA,SAOrC,EAAwBC,mBAAS,WAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAwBF,mBAAS,KAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA4BJ,mBAAS,UAArC,mBAAOK,EAAP,KAAeC,EAAf,KAKA,OACE,eAACtD,EAAA,EAAD,CAAMC,WAAS,EAACsD,QAAS,EAAzB,UACE,cAACvD,EAAA,EAAD,CAAMK,MAAI,EAACF,GAAI,GAAIG,GAAI,EAAvB,SACE,cAACkD,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,YACL9D,QAAQ,WACR+D,UAAQ,EACRC,WAAS,EACTC,MAAM,oBACNC,WAAS,EACTC,MAAOd,EACPe,SAAU,SAACC,GAAD,OAAOf,EAAQe,EAAEC,OAAOH,YAGtC,cAAC/D,EAAA,EAAD,CAAMK,MAAI,EAACF,GAAI,GAAIG,GAAI,EAAvB,SACE,cAACkD,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,SACL9D,QAAQ,WACR+D,UAAQ,EACRC,WAAS,EACTC,MAAM,SACNC,WAAS,EACTC,MAAOV,EACPW,SAAU,SAACC,GAAD,OAAOX,EAAUW,EAAEC,OAAOH,YAGxC,cAAC/D,EAAA,EAAD,CAAMK,MAAI,EAACF,GAAI,GAAIG,GAAI,EAAvB,SACE,cAACkD,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,OACL9D,QAAQ,WACR+D,UAAQ,EACRC,WAAS,EACTC,MAAM,OACNC,WAAS,EACTC,MAAOZ,EACPa,SAAU,SAACC,GAAD,OAAOb,EAAQa,EAAEC,OAAOH,YAGtC,cAAC/D,EAAA,EAAD,CAAMK,MAAI,EAACF,GAAI,GAAIG,GAAI,EAAvB,SACE,cAAC6D,EAAA,EAAD,CAAQvE,QAAQ,YAAYwE,QA9Cd,WAClB,IAAM5C,EAAG,uCAAmCyB,EAAnC,YACTF,EAASvB,EAAK,CAAE2B,OAAMkB,SAAU,KAAM7E,IAAK6D,KA4CvC,wBCrDR,IAAMiB,EAAc,IAAIC,cAwBTC,MAtBf,WACE,MAAsCxB,mBAAS,gDAA/C,mBAAO5B,EAAP,KAAoBqD,EAApB,KACA,EAAoCzB,mBAAoC,CAAEG,KAAM,IAAKkB,SAAU,KAAM7E,IAAK,WAA1G,mBAAO6B,EAAP,KAAmBqD,EAAnB,KAQA,OACE,cAAC,sBAAD,CAAqBC,OAAQL,EAA7B,SACE,eAACvD,EAAA,EAAD,CAAW6D,UAAU,OAAO5D,SAAS,KAArC,UACE,6CACA,cAAC6D,EAAA,EAAD,IACA,cAAC/B,EAAD,CAAcC,SAZA,SAClBvB,EACAL,GAEAsD,EAAejD,GACfkD,EAAcvD,MAQV,cAACF,EAAD,CAAkBG,YAAaA,EAAaC,WAAYA,U,QCtB1DyD,EAAQC,YAAY,CACxBC,QAAS,CACPC,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,cAaGE,EARGL,YAAYD,EAAO,CACnCE,QAAS,CACPK,KAAM,CACJH,KAAMJ,EAAME,QAAQG,UAAUD,SCTpCI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAeX,MAAOM,EAAtB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1BlH,M","file":"static/js/main.56f7e703.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport React from 'react';\nimport dateFormat from 'dateformat';\n\nimport {\n  Paper, Avatar, Typography, Grid,\n} from '@mui/material';\nimport { CommitNode } from './commit.type';\n\nexport default function CommitComponent({ commitNode }: { commitNode: CommitNode }) {\n  const {\n    commit: { message, committer: { date } }, sha, committer: { login, avatar_url },\n  } = commitNode;\n  return (\n    <Paper variant=\"outlined\" sx={{ width: '100%', p: 2 }}>\n      <Grid container columns={{ xs: 12, md: 6 }}>\n        <Grid item xs={4} sm={2}>\n          <Avatar src={avatar_url} />\n        </Grid>\n        <Grid item xs={8} sm={10}>\n          <Typography variant=\"h5\" overflow=\"hidden\" sx={{ m: 2 }}>{login}</Typography>\n        </Grid>\n      </Grid>\n      <Typography variant=\"body1\">{message}</Typography>\n      <Typography variant=\"subtitle1\">{sha}</Typography>\n      <Typography variant=\"subtitle1\">{dateFormat(date, 'fullDate')}</Typography>\n    </Paper>\n  );\n}\n","/* eslint-disable react/function-component-definition */\nimport React from 'react';\nimport { Container, Grid } from '@mui/material';\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <Container maxWidth=\"sm\" sx={{ m: 2 }}>\n      <Grid container columns={{ xs: 4, md: 12 }}>\n        {children}\n      </Grid>\n    </Container>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport CommitComponent from './commit';\nimport { CommitNode } from './commit.type';\nimport Layout from './layout';\n\ntype Commits = CommitNode[];\n\nconst getCommits = (uri: string, params: { [key: string]: string }) => async () => {\n  const url = new URL(uri);\n  Object.keys(params).forEach((key) => url.searchParams.append(key, params[key]));\n\n  return fetch(url.toString(), {\n    headers: {\n      Accept: 'application/vnd.github.v3+json',\n    },\n  }).then((res) => res.json());\n};\n\nexport default function CommitsComponent({ repoAddress, parameters }: {\n  repoAddress: string; parameters: { [key: string]: string };\n}) {\n  const {\n    data, error, isLoading, refetch,\n  } = useQuery<Commits, Error>('commits', getCommits(repoAddress, parameters));\n  useEffect(() => { refetch(); }, [repoAddress, parameters]);\n  return (\n    <Layout>\n      {error && (\n        <p>\n          Error:\n          {' '}\n          {error.message}\n        </p>\n      )}\n      {isLoading && <p>Loading...</p>}\n      {data\n        && data.length\n        ? data.map((node) => (\n          <CommitComponent key={node.sha} commitNode={node} />\n        ))\n        : (<p>No commits found</p>)}\n    </Layout>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button, Grid, TextField } from '@mui/material';\n\nexport default function SearchInputs({ onSubmit }: {\n  onSubmit: (\n    url: string,\n    params: {\n      [key: string]: string\n    }) => void\n}) {\n  const [text, setText] = useState('m3db/m3');\n  const [page, setPage] = useState('1');\n  const [branch, setBranch] = useState('master');\n  const handleFetch = () => {\n    const url = `https://api.github.com/repos/${text}/commits`;\n    onSubmit(url, { page, per_page: '20', sha: branch });\n  };\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12} sm={5}>\n        <TextField\n          size=\"small\"\n          name=\"stepValue\"\n          variant=\"outlined\"\n          required\n          fullWidth\n          label=\"github repository\"\n          autoFocus\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={3}>\n        <TextField\n          size=\"small\"\n          name=\"branch\"\n          variant=\"outlined\"\n          required\n          fullWidth\n          label=\"branch\"\n          autoFocus\n          value={branch}\n          onChange={(e) => setBranch(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={2}>\n        <TextField\n          size=\"small\"\n          name=\"page\"\n          variant=\"outlined\"\n          required\n          fullWidth\n          label=\"page\"\n          autoFocus\n          value={page}\n          onChange={(e) => setPage(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={2}>\n        <Button variant=\"contained\" onClick={handleFetch}>fetch</Button>\n      </Grid>\n    </Grid>\n  );\n}\n","import React, { useState } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport CommitsComponent from 'feature/commit/commits';\nimport { Container, CssBaseline } from '@mui/material';\nimport SearchInputs from 'feature/search/inputs';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  const [repoAddress, setRepoAddress] = useState('https://api.github.com/repos/m3db/m3/commits');\n  const [parameters, setParameters] = useState<{ [key: string]: string }>({ page: '1', per_page: '20', sha: 'master' });\n  const handleFetch = (\n    url: string,\n    params: { [key: string]: string },\n  ) => {\n    setRepoAddress(url);\n    setParameters(params);\n  };\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Container component=\"main\" maxWidth=\"md\">\n        <h1>commit feed</h1>\n        <CssBaseline />\n        <SearchInputs onSubmit={handleFetch} />\n        <CommitsComponent repoAddress={repoAddress} parameters={parameters} />\n      </Container>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import { createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#0052cc',\n    },\n    secondary: {\n      main: '#edf2ff',\n    },\n  },\n});\n\nconst mainTheme = createTheme(theme, {\n  palette: {\n    info: {\n      main: theme.palette.secondary.main,\n    },\n  },\n});\n\nexport default mainTheme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@mui/material';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport mainTheme from './theme/main.theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={mainTheme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}