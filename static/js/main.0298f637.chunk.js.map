{"version":3,"sources":["reportWebVitals.ts","feature/commit/services/getCommitsQuery.ts","feature/search/inputs.tsx","feature/layout/center.tsx","feature/root/home.tsx","feature/commit/commit.tsx","feature/commit/commits.tsx","feature/layout/pageContainer.tsx","App.tsx","theme/main.theme.ts","index.tsx","feature/layout/center.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","org","repo","page","pageSize","uri","params","a","url","URL","Object","keys","forEach","key","searchParams","append","fetch","toString","headers","Accept","res","json","fetchData","String","per_page","SearchInputs","onSubmit","useState","setOrg","setRepo","Grid","container","spacing","item","xs","sm","TextField","size","name","variant","required","fullWidth","label","autoFocus","value","onChange","e","target","Button","onClick","Center","children","className","styles","center","RootPage","navigate","useNavigate","Container","component","maxWidth","getCommitsQuery","data","length","catch","CommitComponent","commitNode","commit","message","date","committer","html_url","login","Paper","sx","width","p","columns","md","Typography","noWrap","dateFormat","href","rel","CommitsComponent","useParams","undefined","useQuery","error","isLoading","refetch","useEffect","map","node","sha","Layout","mx","Link","to","queryClient","QueryClient","App","client","CssBaseline","path","index","element","theme","createTheme","palette","primary","main","secondary","mainTheme","info","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0298f637.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const fetchData = (uri: string, params: { [key: string]: string }) => async () => {\n  const url = new URL(uri);\n  Object.keys(params).forEach((key) => url.searchParams.append(key, params[key]));\n\n  return fetch(url.toString(), {\n    headers: {\n      Accept: 'application/vnd.github.v3+json',\n    },\n  }).then((res) => res.json());\n};\n\ninterface Params { org: string; repo: string; page?: number, pageSize?: number, branch?: string }\n\nexport default ({\n  org, repo, page = 1, pageSize = 20,\n}: Params) => {\n  const uri = `https://api.github.com/repos/${org}/${repo}/commits`;\n  const params = { page: String(page), per_page: String(pageSize) };\n  return fetchData(uri, params);\n};\n","import React, { useState } from 'react';\nimport { Button, Grid, TextField } from '@mui/material';\n\nexport default function SearchInputs({ onSubmit }: {\n  onSubmit: (opt: { org: string; repo: string; }) => void\n}) {\n  const [org, setOrg] = useState('m3db');\n  const [repo, setRepo] = useState('m3');\n  const handleFetch = () => {\n    onSubmit({ org, repo });\n  };\n  return (\n    <Grid container spacing={2}>\n\n      <Grid item xs={5} sm={5}>\n        <TextField\n          size=\"small\"\n          name=\"org\"\n          variant=\"outlined\"\n          required\n          fullWidth\n          label=\"github organization\"\n          autoFocus\n          value={org}\n          onChange={(e) => setOrg(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={5} sm={5}>\n        <TextField\n          size=\"small\"\n          name=\"stepValue\"\n          variant=\"outlined\"\n          required\n          fullWidth\n          label=\"github repository\"\n          autoFocus\n          value={repo}\n          onChange={(e) => setRepo(e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={2} sm={2}>\n        <Button variant=\"contained\" onClick={handleFetch}>fetch</Button>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport styles from './center.module.css';\n\nexport default function Center({ children }: { children: React.ReactNode }) {\n  return (\n    <div className={styles.center}>\n      {children}\n    </div>\n  );\n}\n","import { Container } from '@mui/material';\nimport getCommitsQuery from 'feature/commit/services/getCommitsQuery';\nimport SearchInputs from 'feature/search/inputs';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Center from '../layout/center';\n\ninterface Props {\n  org: string;\n  repo: string;\n}\n\nexport default function RootPage() {\n  const navigate = useNavigate();\n  const submit = ({ org, repo }: Props) => {\n    getCommitsQuery({\n      org, repo, page: 1, pageSize: 1,\n    })().then((data) => {\n      if (data.length) {\n        navigate(`/${org}/${repo}`);\n      } else {\n        navigate('/does/not/exist');\n      }\n    }).catch(() => {\n      navigate('/does/not/exist');\n    });\n  };\n  return (\n    <Center>\n      <Container component=\"main\" maxWidth=\"md\">\n        <SearchInputs onSubmit={submit} />\n      </Container>\n    </Center>\n  );\n}\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport React from 'react';\nimport dateFormat from 'dateformat';\n\nimport {\n  Paper, Typography, Grid,\n} from '@mui/material';\nimport { CommitNode } from './commit.type';\n\nexport default function CommitComponent({ commitNode }: { commitNode: CommitNode }) {\n  const {\n    commit: { message, committer: { date } }, html_url, committer: { login },\n  } = commitNode;\n  return (\n    <Paper variant=\"outlined\" sx={{ width: '100%', p: 2 }}>\n      <Grid container columns={{ xs: 12, md: 6 }}>\n        <Grid item xs={4} sm={3}>\n          <Typography variant=\"caption\" noWrap>{dateFormat(date, 'fullDate')}</Typography>\n        </Grid>\n        <Grid item xs={5} sm={7}>\n          <a href={html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n            <Typography variant=\"body1\" noWrap>{message}</Typography>\n          </a>\n        </Grid>\n        <Grid item xs={3} sm={2}>\n          <Typography variant=\"h5\" noWrap>{login}</Typography>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useQuery } from 'react-query';\nimport { useParams } from 'react-router-dom';\nimport CommitComponent from './commit';\nimport { CommitNode } from './commit.type';\nimport getCommitsQuery from './services/getCommitsQuery';\n\ntype Commits = CommitNode[];\n\nexport default function CommitsComponent() {\n  const { org, repo } = useParams();\n  if (org === undefined || repo === undefined) {\n    return null;\n  }\n\n  const {\n    data, error, isLoading, refetch,\n  } = useQuery<Commits, Error>('commits', getCommitsQuery({ org, repo }));\n  useEffect(() => { refetch(); }, [org, repo]);\n  return (\n    <>\n      {error && (\n        <p>\n          Error:\n          {' '}\n          {error.message}\n        </p>\n      )}\n      {isLoading && <p>Loading...</p>}\n      {data\n        && data.length\n        ? data.map((node) => (\n          <CommitComponent key={node.sha} commitNode={node} />\n        ))\n        : (<p>No commits found</p>)}\n    </>\n  );\n}\n","/* eslint-disable react/function-component-definition */\nimport React from 'react';\nimport { Button, Container, Grid } from '@mui/material';\nimport { Link } from 'react-router-dom';\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <Container maxWidth=\"md\" sx={{ p: 1, mx: 'auto' }}>\n      <Button variant=\"outlined\" component={Link} to=\"/\">back to home</Button>\n      <Grid container columns={{ xs: 4, md: 12 }}>\n        {children}\n      </Grid>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { CssBaseline } from '@mui/material';\nimport RootPage from 'feature/root/home';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport CommitsComponent from 'feature/commit/commits';\nimport Layout from 'feature/layout/pageContainer';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <CssBaseline />\n      <HashRouter>\n        <Routes>\n          <Route path=\"/\">\n            <Route index element={<RootPage />} />\n            <Route path=\"/does/not/exist\" element={(<Layout>does not exist!</Layout>)} />\n            <Route path=\"/:org/:repo\" element={<Layout><CommitsComponent /></Layout>} />\n          </Route>\n        </Routes>\n      </HashRouter>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import { createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#0052cc',\n    },\n    secondary: {\n      main: '#edf2ff',\n    },\n  },\n});\n\nconst mainTheme = createTheme(theme, {\n  palette: {\n    info: {\n      main: theme.palette.secondary.main,\n    },\n  },\n});\n\nexport default mainTheme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@mui/material';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport mainTheme from './theme/main.theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={mainTheme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"center_center__1g9eN\"};"],"sourceRoot":""}