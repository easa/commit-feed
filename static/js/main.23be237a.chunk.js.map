{"version":3,"sources":["reportWebVitals.ts","feature/commit/commit.tsx","feature/commit/layout.tsx","feature/commit/commits.tsx","App.tsx","theme/main.theme.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CommitComponent","commitNode","author","avatar_url","login","message","commit","sha","Paper","variant","sx","width","p","Grid","container","columns","xs","md","item","sm","Avatar","src","Typography","overflow","m","Layout","children","Container","maxWidth","CommitsComponent","url","repoAddress","useQuery","a","fetch","headers","Accept","res","json","data","error","isLoading","map","node","queryClient","QueryClient","App","useState","text","setText","setRepoAddress","client","component","CssBaseline","spacing","TextField","size","name","required","fullWidth","label","autoFocus","value","onChange","e","target","Button","onClick","theme","createTheme","palette","primary","main","secondary","mainTheme","info","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.23be237a.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {\n  Paper, Avatar, Typography, Grid,\n} from '@mui/material';\nimport { CommitNode } from './commit.type';\n\nexport default function CommitComponent({ commitNode }: { commitNode: CommitNode }) {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  const { author: { avatar_url, login }, commit: { message }, sha } = commitNode;\n  return (\n    <Paper variant=\"outlined\" sx={{ width: '100%', p: 2 }}>\n      <Grid container columns={{ xs: 12, md: 6 }}>\n        <Grid item xs={4} sm={2}>\n          <Avatar src={avatar_url} />\n        </Grid>\n        <Grid item xs={8} sm={10}>\n          <Typography variant=\"h5\" overflow=\"hidden\" sx={{ m: 2 }}>{login}</Typography>\n        </Grid>\n      </Grid>\n      <Typography variant=\"body1\">{message}</Typography>\n      <Typography variant=\"subtitle1\">{sha}</Typography>\n    </Paper>\n  );\n}\n","/* eslint-disable react/function-component-definition */\nimport React from 'react';\nimport { Container, Grid } from '@mui/material';\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n  return (\n    <Container maxWidth=\"sm\">\n      <Grid container columns={{ xs: 4, md: 12 }}>\n        {children}\n      </Grid>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { useQuery } from 'react-query';\nimport CommitComponent from './commit';\nimport { CommitNode } from './commit.type';\nimport Layout from './layout';\n\ntype Commits = CommitNode[];\n\n// const getCommits = async () => fetch('https://api.github.com/orgs/facebook/repos', {\nconst getCommits = (url: string) => async () => fetch(url, {\n  headers: {\n    Accept: 'application/vnd.github.v3+json',\n  },\n}).then((res) => res.json());\n\nfunction CommitsComponent({ repoAddress }: { repoAddress: string }) {\n  const { data, error, isLoading } = useQuery<Commits, Error>('commits', getCommits(repoAddress));\n\n  return (\n    <>\n      {error && (\n        <p>\n          Error:\n          {' '}\n          {error.message}\n        </p>\n      )}\n      {isLoading && <p>Loading...</p>}\n      {data && data.map((node) => (\n        <CommitComponent key={node.sha} commitNode={node} />\n      ))}\n    </>\n  );\n}\n\nexport default ({ repoAddress }: { repoAddress: string }) => (\n  <Layout>\n    <CommitsComponent {...{ repoAddress }} />\n  </Layout>\n);\n","import React, { useState } from 'react';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport CommitsComponent from 'feature/commit/commits';\nimport {\n  Button, Container, CssBaseline, Grid, TextField,\n} from '@mui/material';\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  const [text, setText] = useState('https://api.github.com/repos/m3db/m3/commits');\n  const [repoAddress, setRepoAddress] = useState(text);\n  return (\n    <QueryClientProvider client={queryClient}>\n      <Container component=\"main\" maxWidth=\"md\">\n        <h1>commit feed</h1>\n        <CssBaseline />\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={10}>\n            <TextField\n              size=\"small\"\n              name=\"stepValue\"\n              variant=\"outlined\"\n              required\n              fullWidth\n              label=\"repository address\"\n              autoFocus\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <Button variant=\"contained\" onClick={() => { setRepoAddress(text); }}>fetch</Button>\n          </Grid>\n        </Grid>\n        <CommitsComponent repoAddress={repoAddress} />\n      </Container>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","import { createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#0052cc',\n    },\n    secondary: {\n      main: '#edf2ff',\n    },\n  },\n});\n\nconst mainTheme = createTheme(theme, {\n  palette: {\n    info: {\n      main: theme.palette.secondary.main,\n    },\n  },\n});\n\nexport default mainTheme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@mui/material';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport mainTheme from './theme/main.theme';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={mainTheme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}